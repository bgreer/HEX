*******************************************************************************
Srf08 Library for the Arduino/Sanguino
Copyright (c) 2009 Michael E. Ferguson.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*******************************************************************************
Installation:
Copy files into <arduino>/hardware/libraries/Srf08/ as you would any other 
Arduino library.

*******************************************************************************
Documentation:
    This library allows the use of Srf-02 and Srf-08 I2C-based sonar ranging 
sensors. The constructor to create an Srf08 object is: Srf08(deviceID), where 
deviceID is the the offset for the particular sonar ranger you want to connect
to, the default is 0. 
    To take a reading, call ping(), and then call getData() after a sufficient
amount of time.

*******************************************************************************
Example code:

// This is a simple example of how to use the Srf08 library
#include <Wire.h>
#include <Srf08.h>

// Create an instance of Srf08, constructor is Srf08(deviceID)
Srf08 sonar = Srf08(0);

void setup(){		// this is called once
    Wire.begin();   // this is needed to start the I2C bus
    Serial.begin(38400);
    sonar.ping();
}

void loop(){        // this will print the sensor distance in CM, every 2sec.
    sonar.ping();
    delay(50);    
    Serial.print(sonar.getData());
	delay(1950);
}

